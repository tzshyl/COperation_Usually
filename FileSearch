//判断文件是否以指定字符串结尾
bool endWith(const char * str, const char * end) {
	bool result = false;

	if (str != NULL && end != NULL) {
		int l1 = strlen(str);
		int l2 = strlen(end);
		if (l1 >= l2) {
			if (strcmp(str + l1 - l2, end) == 0) {
				result = true;
			}
		}
	}

	return result;
}

//获取某一路径下所有指定类型的文件（包括子目录）
void getFiles( string path, vector<string>& files, vector<string> &ownname)  
{  
    /*files存储文件的路径及名称(eg.   C:\Users\WUQP\Desktop\test_devided\data1.txt)
     ownname只存储文件的名称(eg.     data1.txt)*/
    
    //文件句柄  
    long   hFile   =   0;  
    //文件信息  
    struct _finddata_t fileinfo;  
    string p;  
    if((hFile = _findfirst(p.assign(path).append("\\*").c_str(),&fileinfo)) !=  -1)  
    {  
        do  
        {  
            //如果是目录,迭代之  
            //如果不是,加入列表  
            if((fileinfo.attrib &  _A_SUBDIR))  
            {  
                if(strcmp(fileinfo.name,".") != 0  &&  strcmp(fileinfo.name,"..") != 0)  
                    getFiles( p.assign(path).append("\\").append(fileinfo.name), files, ownname ); 
            }  
            else  
            {  
				if (endWith(fileinfo.name,".CATPart"))
				{
					files.push_back(p.assign(path).append("\\").append(fileinfo.name) );  
					ownname.push_back(fileinfo.name);
				}
 
            }  
        }while(_findnext(hFile, &fileinfo)  == 0);  
        _findclose(hFile);  
    }  
}
